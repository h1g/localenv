- name: "Templating project {{ project }} / {{ repo_name }} service files"
  hosts: localhost
  gather_facts: true
  vars_files:
    - "{{ playbook_dir }}/vars/main.yml"
    - "{{ playbook_dir }}/vars/localenv.yml"
    - "{{ playbook_dir }}/projects/{{ project }}.yml"
  tasks:
    - name: "Extract variables for {{ project }} / {{ repo_name }}"
      set_fact:
        "{{ item.key }}": "{{ item.value }}"
      loop: "{{ lookup('vars',repo_name)|dict2items }}"

    - name: "Load tech oriented variables"
      include_vars:
        dir: "{{ playbook_dir + '/vars/tech' }}"
        files_matching: "{{ tech + '.yml' }}"

    - name: "Load docker-compose services primitives"
      set_fact:
        services_primitives: "{{ services_primitives|default({})|combine(lookup('template', playbook_dir + '/templates/primitives/' + item + '.yml.j2')|from_yaml) }}"
      loop: "{{ services.keys() }}"

    - name: "Merge docker-compose project services with services primitives"
      set_fact:
        services: "{{ services_primitives|combine(services|dict2items|rejectattr('value','equalto',none)|list|items2dict,recursive=True) }}"

    - name: "Generate persistent_volumes list"
      set_fact:
        persistent_volumes: "{{ persistent_volumes|default([]) + item.value['volumes']|flatten|reject('search',':')|map('regex_replace','(.*)',item.key + '\\1')|list  }}"
      when: item.value['volumes'] is defined
      loop: "{{ services|dict2items }}"

    - name: "Create docker-compose services dirs for project : {{ project }}/{{ repo_name }}"
      file:
        path: "{{ service_dir }}/{{ item.path }}"
        state: directory
      when: item.state == 'directory' and item.path in services.keys()
      loop: "{{ templates_hier }}"

    - name: "Render templated services files for project : {{ project }}/{{ repo_name }}"
      template:
        src: "{{ playbook_dir }}/templates/{{ item.path }}"
        dest: "{{ service_dir }}/{{ item.path|regex_replace('\\.j2','') }}"
        mode: preserve
      when: item.state == 'file' and item.path is search ('.j2') and ( item.path in ['Makefile.j2' , 'docker-compose.yml.j2'] or item.path|dirname in services.keys() )
      loop: "{{ templates_hier }}"

    - name: "Render services files for project : {{ project }}/{{ repo_name }}"
      copy:
        src: "{{ playbook_dir }}/templates/{{ item.path }}"
        dest: "{{ service_dir }}/{{ item.path }}"
        mode: preserve
      when: item.state == 'file' and item.path is not search ('.j2') and item.path|dirname in services.keys()
      loop: "{{ templates_hier }}"
