- name: "Templating project {{ project }} / {{ repo_name }} service files"
  hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ playbook_dir }}/vars/main.yml"
    - "{{ playbook_dir }}/vars/localenv.yml"
    - "{{ playbook_dir }}/projects/{{ project }}.yml"
  tasks:
    - name: "Extract variables for {{ project }} / {{ repo_name }}"
      set_fact:
        "{{ item.key }}": "{{ item.value }}"
      loop: "{{ lookup('vars',repo_name)|dict2items }}"

    - name: "Load tech oriented variables"
      include_vars:
        file: "{{ playbook_dir + '/vars/tech/' + tech + '.yml' }}"
      when: (playbook_dir + '/vars/tech/' + tech + '.yml') is file

    - name: "Load docker-compose services primitives"
      set_fact:
        services_primitives: "{{ services_primitives|combine({item: lookup('template',services_primitives_path + item + '.yml.j2')|from_yaml}) }}"
      when: (services_primitives_path + item + '.yml.j2') is file
      loop: "{{ services.keys()|list }}"

    - name: "Remove empty docker-compose project services"
      set_fact:
        services: "{{ services|dict2items|rejectattr('value','equalto',none)|list|items2dict }}"

    - name: "Merge docker-compose project services with services primitives"
      set_fact:
        services: "{{ services_primitives|combine(services,recursive=True) }}"

    - name: "Render Makefile and docker-compose.yml for project : {{ project }}/{{ repo_name }}"
      template:
        src: "{{ playbook_dir }}/templates/{{ item }}"
        dest: "{{ infra_dir }}/{{ item|regex_replace('\\.j2','') }}"
        mode: preserve
      loop: ['Makefile.j2','docker-compose.yml.j2']

    - name: "Create Dockerfiles services dirs for project : {{ project }}/{{ repo_name }}"
      file:
        path: "{{ infra_dir }}/{{ item }}"
        state: directory
      when: item in services.keys()
      loop: "{{ dockerfiles_filetree|selectattr('state','equalto','directory')|map(attribute='path')|list }}"

    - name: "Render Dockerfiles templates for project : {{ project }}/{{ repo_name }}"
      template:
        src: "{{ dockerfiles_primitives_path +  item }}"
        dest: "{{ infra_dir }}/{{ item|regex_replace('\\.j2','') }}"
        mode: preserve
      when: item|dirname in services.keys()
      loop: "{{ dockerfiles_filetree|selectattr('state','equalto','file')|map(attribute='path')|select('search','.j2')|list }}"

    - name: "Copy Dockerfiles files for project : {{ project }}/{{ repo_name }}"
      copy:
        src: "{{ dockerfiles_primitives_path + item }}"
        dest: "{{ infra_dir }}/{{ item }}"
        mode: preserve
      when: item|dirname in services.keys()
      loop: "{{ dockerfiles_filetree|selectattr('state','equalto','file')|map(attribute='path')|reject('search','.j2')|list }}"
